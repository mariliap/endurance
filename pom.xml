<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>mpl</groupId>
    <artifactId>endurance</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
        <module>web</module>
        <module>smart</module>
        <module>data</module>
        <module>gesps</module>
    </modules>

    <properties>

        <!-- Set Java Version -->
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
        <!-- Set resource encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Web container properties -->
        <jetty-version>9.3.7.v20160115</jetty-version>
        <!-- REST properties -->
        <jersey-version>2.23.2</jersey-version>
        <!-- CDI properties -->
        <weld.version>2.3.3.Final</weld.version>
        <deltaspike.version>1.7.2</deltaspike.version>
        <!-- Database properties -->
        <hsqldb.version>2.3.1</hsqldb.version>
    </properties>

    <repositories>
        <repository>
            <id>joelso-mvn-repo</id>
            <name>joelso github mvn repo</name>
            <url>https://raw.github.com/joelso/joelso-mvn-repo/master/snapshots/</url>
        </repository>

    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.deltaspike.distribution</groupId>
                <artifactId>distributions-bom</artifactId>
                <version>${deltaspike.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <dependencies>

        <!-- JETTY -->

        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-annotations</artifactId>
            <version>${jetty-version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-webapp</artifactId>
            <version>${jetty-version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>apache-jsp</artifactId>
            <version>${jetty-version}</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>apache-jstl</artifactId>
            <version>${jetty-version}</version>
            <type>pom</type>
        </dependency>

        <!-- COMMONS -->

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>${hsqldb.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>5.2.2.Final</version>
        </dependency>

        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.3</version>
        </dependency>

        <!-- Quem ta usando: querytool-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.5</version>
        </dependency>

        <!-- REST & WEBSOCKET -->
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>7.0</version>
        </dependency>
        <dependency> <!--retirar, pois é so para containes que não implementam a especificação servlet 3.0 ou maior -->
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet-core</artifactId>
            <version>${jersey-version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
            <version>${jersey-version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-moxy</artifactId>
            <version>${jersey-version}</version>
        </dependency>



        <!--<dependency>-->
            <!-- the structure has changed, jersey-gf-cdi has been replaced by multiple modules. -->
            <!-- In order to run in servlet container (jetty),you will need jersey-cdi1x-servlet dependency. -->
            <!-- If you would like to run out of the servlet environment, you would need to use jersey-weld-se module. -->
            <!--Both do have (transitive) dependencies on jersey-cdi1x-->

        <!--<groupId>org.glassfish.jersey.containers.glassfish</groupId>-->
        <!--<artifactId>jersey-gf-cdi</artifactId>-->
        <!--<version>2.14</version>-->
        <!--</dependency>-->

        <!--<dependency>-->
        <!--<groupId>org.glassfish.jersey.ext.cdi</groupId>-->
        <!--<artifactId>jersey-weld2-se</artifactId>-->
        <!--<version>${jersey-version}</version>-->
        <!--</dependency>-->

        <dependency>
            <groupId>org.glassfish.jersey.ext.cdi</groupId>
            <artifactId>jersey-cdi1x</artifactId>
            <version>${jersey-version}</version>
        </dependency>

        <!-- CDI E TRANSAÇÃO -->
        <dependency>
            <groupId>org.apache.deltaspike.core</groupId>
            <artifactId>deltaspike-core-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.deltaspike.core</groupId>
            <artifactId>deltaspike-core-impl</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.weld.se</groupId>
            <artifactId>weld-se</artifactId>
            <version>${weld.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!--<dependency> &lt;!&ndash; verificar se pode retirar, pois parece ser redundante com o de baixo&ndash;&gt;-->
            <!--<groupId>org.jboss.weld</groupId>-->
            <!--<artifactId>weld-core</artifactId>-->
            <!--<version>${weld.version}</version>-->
        <!--</dependency>-->

        <dependency><!--lembrar de retirar se desnecessário -->
            <groupId>org.jboss.weld.servlet</groupId>
            <artifactId>weld-servlet-core</artifactId>
            <version>${weld.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.deltaspike.cdictrl</groupId>
            <artifactId>deltaspike-cdictrl-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.deltaspike.cdictrl</groupId>
            <artifactId>deltaspike-cdictrl-weld</artifactId>
            <scope>runtime</scope>
        </dependency> <!--mvn clean install-->

        <dependency>
            <groupId>org.apache.deltaspike.cdictrl</groupId>
            <artifactId>deltaspike-cdictrl-servlet</artifactId>
        </dependency>


        <dependency>
            <groupId>org.apache.deltaspike.modules</groupId>
            <artifactId>deltaspike-jpa-module-api</artifactId>
            <version>${deltaspike.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.deltaspike.modules</groupId>
            <artifactId>deltaspike-jpa-module-impl</artifactId>
            <version>${deltaspike.version}</version>
            <scope>runtime</scope>
        </dependency>



        <!-- Code generation -->
        <!--<dependency>-->
            <!--<groupId>net.bytebuddy</groupId>-->
            <!--<artifactId>byte-buddy</artifactId>-->
            <!--<version>1.5.13</version>-->
        <!--</dependency>-->

        <!-- LOGGING -->

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.7</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.7.7</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>1.7.7</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>1.7.7</version>
        </dependency>

        <!-- Logging Impl. -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.1.2</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>endurance</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <outputDirectory>dist</outputDirectory>
                    <archive>
                        <manifest>
                            <mainClass>research.mpl.backend.Main</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <finalName>${project.artifactId}-${project.version}</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id> <!-- this is used for inheritance merges -->
                        <phase>package</phase> <!-- bind to the packaging phase -->
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.1.1</version>
                <executions>
                    <execution>
                        <id>enforce-java</id>
                        <phase>compile</phase><!--A fase default do plugin enforcer é "validate", que roda antes do compile, por isso não dava certo, mesmo com o compile setado pra usar o java 8-->
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>[3.0.0,)</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>[1.8,)</version>
                                    <message>[ERROR] OLD JDK [${java.version}] in use.
                                        Jetty ${jetty-version} requires JDK 1.8 or newer</message>
                                </requireJavaVersion>
                            </rules>
                            <skip>true</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--Para rodar o MAVEN na versão certa, independente do JAVA_HOME, temos duas opções: -->
            <!--Ou usa via compiler-plugin ou via linha de comando: -->
            <!--
                mvn -Dmaven.compiler.fork=true -Dmaven.compiler.executable="C:\Program Files\Java\jdk1.8.0_101\bin\javac" -Denforcer.skip=true clean install
            -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.1</version>
                <configuration>
                    <verbose>true</verbose>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                    <source>1.8</source>
                    <target>1.8</target>
                    <executable>C:/Program Files/Java/jdk1.8.0_101/bin/javac</executable>
                    <compilerVersion>1.8</compilerVersion>
                    <fork>true</fork>
                    <excludes>
                        <exclude>research/mpl/backend/common/data/*.java</exclude>
                        <exclude>research/mpl/backend/smart/**/*.java</exclude>
                        <exclude>research.mpl.backend.querytool.ngquerytool/**/*.java</exclude>
                    </excludes>
                </configuration>
            </plugin>


            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <!--<executable>java</executable>-->
                    <executable>C:/Program Files/Java/jdk1.8.0_101/bin/java</executable>
                    <arguments>
                        <argument>-Dorg.eclipse.jetty.webapp.LEVEL=DEBUG</argument>
                        <argument>-cp</argument>
                        <classpath />
                        <argument>research.mpl.backend.Main</argument>
                        <argument>12345</argument>
                    </arguments>
                </configuration>
                <executions>
                    <execution>
                        <id>exec-bower-install</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>bower</executable>
                            <arguments>
                                <argument>install</argument>
                            </arguments>
                            <workingDirectory>${basedir}/src/main/resources/webapp</workingDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>